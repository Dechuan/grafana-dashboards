/* tslint:disable */
/* eslint-disable */
/**
 * PMM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: public
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineObject65,
    InlineObject65FromJSON,
    InlineObject65ToJSON,
    InlineResponseDefault1,
    InlineResponseDefault1FromJSON,
    InlineResponseDefault1ToJSON,
} from '../models';

export interface RemoveServiceMixin2Request {
    body: InlineObject65;
}

/**
 * 
 */
export class ServiceApi extends runtime.BaseAPI {

    /**
     * RemoveService removes Service with Agents.
     */
    async removeServiceMixin2Raw(requestParameters: RemoveServiceMixin2Request): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling removeServiceMixin2.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/v1/management/Service/Remove`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InlineObject65ToJSON(requestParameters.body),
        });

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * RemoveService removes Service with Agents.
     */
    async removeServiceMixin2(requestParameters: RemoveServiceMixin2Request): Promise<object> {
        const response = await this.removeServiceMixin2Raw(requestParameters);
        return await response.value();
    }

}
