/* tslint:disable */
/* eslint-disable */
/**
 * PMM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: public
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InlineResponse20025External,
    InlineResponse20025ExternalFromJSON,
    InlineResponse20025ExternalFromJSONTyped,
    InlineResponse20025ExternalToJSON,
    InlineResponse20026Mongodb,
    InlineResponse20026MongodbFromJSON,
    InlineResponse20026MongodbFromJSONTyped,
    InlineResponse20026MongodbToJSON,
    InlineResponse20027Mysql,
    InlineResponse20027MysqlFromJSON,
    InlineResponse20027MysqlFromJSONTyped,
    InlineResponse20027MysqlToJSON,
    InlineResponse20028Postgresql,
    InlineResponse20028PostgresqlFromJSON,
    InlineResponse20028PostgresqlFromJSONTyped,
    InlineResponse20028PostgresqlToJSON,
    InlineResponse20029Proxysql,
    InlineResponse20029ProxysqlFromJSON,
    InlineResponse20029ProxysqlFromJSONTyped,
    InlineResponse20029ProxysqlToJSON,
} from './';

/**
 * 
 * @export
 * @interface InlineResponse20031
 */
export interface InlineResponse20031 {
    /**
     * 
     * @type {Array<InlineResponse20027Mysql>}
     * @memberof InlineResponse20031
     */
    mysql?: Array<InlineResponse20027Mysql>;
    /**
     * 
     * @type {Array<InlineResponse20026Mongodb>}
     * @memberof InlineResponse20031
     */
    mongodb?: Array<InlineResponse20026Mongodb>;
    /**
     * 
     * @type {Array<InlineResponse20028Postgresql>}
     * @memberof InlineResponse20031
     */
    postgresql?: Array<InlineResponse20028Postgresql>;
    /**
     * 
     * @type {Array<InlineResponse20029Proxysql>}
     * @memberof InlineResponse20031
     */
    proxysql?: Array<InlineResponse20029Proxysql>;
    /**
     * 
     * @type {Array<InlineResponse20025External>}
     * @memberof InlineResponse20031
     */
    external?: Array<InlineResponse20025External>;
}

export function InlineResponse20031FromJSON(json: any): InlineResponse20031 {
    return InlineResponse20031FromJSONTyped(json, false);
}

export function InlineResponse20031FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse20031 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mysql': !exists(json, 'mysql') ? undefined : ((json['mysql'] as Array<any>).map(InlineResponse20027MysqlFromJSON)),
        'mongodb': !exists(json, 'mongodb') ? undefined : ((json['mongodb'] as Array<any>).map(InlineResponse20026MongodbFromJSON)),
        'postgresql': !exists(json, 'postgresql') ? undefined : ((json['postgresql'] as Array<any>).map(InlineResponse20028PostgresqlFromJSON)),
        'proxysql': !exists(json, 'proxysql') ? undefined : ((json['proxysql'] as Array<any>).map(InlineResponse20029ProxysqlFromJSON)),
        'external': !exists(json, 'external') ? undefined : ((json['external'] as Array<any>).map(InlineResponse20025ExternalFromJSON)),
    };
}

export function InlineResponse20031ToJSON(value?: InlineResponse20031 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mysql': value.mysql === undefined ? undefined : ((value.mysql as Array<any>).map(InlineResponse20027MysqlToJSON)),
        'mongodb': value.mongodb === undefined ? undefined : ((value.mongodb as Array<any>).map(InlineResponse20026MongodbToJSON)),
        'postgresql': value.postgresql === undefined ? undefined : ((value.postgresql as Array<any>).map(InlineResponse20028PostgresqlToJSON)),
        'proxysql': value.proxysql === undefined ? undefined : ((value.proxysql as Array<any>).map(InlineResponse20029ProxysqlToJSON)),
        'external': value.external === undefined ? undefined : ((value.external as Array<any>).map(InlineResponse20025ExternalToJSON)),
    };
}


